import { ANTLRInputStream, CommonTokenStream } from 'antlr4ts';
import { PortuguesPuroLexer } from './antlr4/PortuguesPuroLexer'
import { PortuguesPuroParser } from './antlr4/PortuguesPuroParser';
import { ASTBuilder } from './ATSBuilder.ts';

const input = `
O total é um número.
A quantidade é um número igual a 10.
`;

const inputStream = new ANTLRInputStream(input);
const lexer = new PortuguesPuroLexer(inputStream);
const tokenStream = new CommonTokenStream(lexer);
const parser = new PortuguesPuroParser(tokenStream);

const tree = parser.programa();
const astBuilder = new ASTBuilder();
const ast = astBuilder.visit(tree);

console.log(JSON.stringify(ast, null, 2));


function findSymbol(ast: ASTNode, symbolName: string): ASTNode | null {
    if (ast.text?.includes(symbolName)) {
        return ast;
    }
    if (ast.children) {
        for (const child of ast.children) {
            const result = findSymbol(child, symbolName);
            if (result) return result;
        }
    }
    return null;
}
const symbol = findSymbol(ast, 'quantidade');
if (symbol) {
		console.log(`Símbolo encontrado: ${symbol.text} na linha ${symbol.line}, coluna ${symbol.column}`);
}

/*
[{
	"resource": "/e:/POP-LSP/server/componentes/teste1.ts",
	"owner": "typescript",
	"code": "2614",
	"severity": 8,
	"message": "O módulo '\"./antlr4/PortuguesPuroLexer\"' não tem membro exportado 'PortuguesPuroLexer'. Você quis dizer 'importar PortuguesPuroLexer de \"./antlr4/PortuguesPuroLexer\"' em vez disso?",
	"source": "ts",
	"startLineNumber": 2,
	"startColumn": 10,
	"endLineNumber": 2,
	"endColumn": 28,
	"origin": "extHost1"
}]
*/